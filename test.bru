meta {
  name: Create a magic link
  type: http
  seq: 4
}

post {
  url: {{baseUrl}}/api/v3/partner/firms/{{defaultFirmID}}/magic-link
  body: none
  auth: none
}

params:query {
  ~destination_url:
}

params:path {
  firm_id:
}


tests {
  test("status must be 200", function() {
      expect(res.status).to.eql(200);
  });

  test("expiry time is valid", function() {
    // Check that property exists and is not empty
    expect(res.body).to.have.property('expires').that.is.not.empty;

    // Parse the expires time
    const expiresDate = new Date(res.body.expires);

    // Get current time
    const now = new Date();

    // Calculate time difference in milliseconds
    const timeDiff = expiresDate - now;

    // Convert 2 hours to milliseconds (2 * 60 * 60 * 1000)
    const twoHoursMs = 2 * 60 * 60 * 1000;

    // Check if expires is within 2 hours of now
    expect(timeDiff).to.be.at.most(twoHoursMs, "Expires should be within 2 hours from now");
    expect(timeDiff).to.be.above(0, "Expires should be in the future");
  });

  test("url is properly formatted", function() {
    // Check that property exists and is not empty
    expect(res.body).to.have.property('url').that.is.not.empty;
    const hostBaseUrl = bru.getEnvVar("baseUrl");

    // Check that the URL contains localhost:8080
    expect(res.body.url).to.include(hostBaseUrl, `URL should contain ${hostBaseUrl}`);
  });
}

